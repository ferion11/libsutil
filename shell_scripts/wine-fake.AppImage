#!/bin/bash -e
# v0.2
HERE="$(dirname "$(readlink -f "${0}")")"
INSTALL_DIR_NAME="wineInstallation"
INSTALL_DIR="${HERE}/${INSTALL_DIR_NAME}"

selectInstallation() {
	INSTALLATION_FULLPATH="$(zenity --file-selection --directory --filename="${HERE}"/)"
	if [ -z "${INSTALLATION_FULLPATH}" ]; then
		echo "No directory file selected! exiting..."
		exit 1
	fi
	INSTALLATION_INSIDE_DIR="$(dirname ${INSTALLATION_FULLPATH})"
	INSTALLATION_DIRNAME="$(basename ${INSTALLATION_FULLPATH})"

	if [ "${INSTALLATION_INSIDE_DIR}" != "${HERE}" ]; then
		echo "is out"
		rm -rf "${INSTALL_DIR}"
		ln -s "${INSTALLATION_FULLPATH}" "${INSTALL_DIR}"
		echo "Linked ${INSTALLATION_FULLPATH} with ${INSTALL_DIR}"
	else
		echo "is here"
		rm -rf "${INSTALL_DIR}"
		ln -s "${INSTALLATION_DIRNAME}" "${INSTALL_DIR}"
		echo "Linked ${INSTALLATION_DIRNAME} with ${INSTALL_DIR}"
	fi

	echo "Installation selected!"
	exit 0
}

if [ "${1}" = "selectInstallation" ] || [ ! -d "${INSTALL_DIR}" ]; then
	selectInstallation
fi

#=================================================
export WINEVERPATH="${INSTALL_DIR}"
export WINESERVER="${INSTALL_DIR}/bin/wineserver"
export WINELOADER="${INSTALL_DIR}/bin/wine"
export WINEPATH="${INSTALL_DIR}/bin:${INSTALL_DIR}/lib/wine:${WINEPATH}"
export WINEDLLPATH="${INSTALL_DIR}/lib/wine/fakedlls:${WINEDLLPATH}"

export LD_LIBRARY_PATH="${INSTALL_DIR}/lib/wine:${LD_LIBRARY_PATH}"

BINARY_NAME="${0##*/}"
SCRIPT_NAME="$(basename -- "$(readlink -f -- "$0")")"
#=================================================

# Load winecfg if no arguments given
APPLICATION=""
if [ -z "${*}" ] ; then
	APPLICATION="winecfg"
fi

# change some scripts to exe executables
if [[ "${1}" =~ ^(winecfg|wineboot|regedit|regsvr32|msiexec|msidb|notepad|winefile|winemine)$ ]]; then
	args=( "${@}" )
	args[0]="${1}.exe"
	set "${args[@]}"
fi

# Allow this fake AppImage to be symlinked to e.g., /usr/bin/wineserver
if [ -n "${1}" ] && [ -x "${INSTALL_DIR}/bin/${1}" ] ; then
	MAIN="${INSTALL_DIR}/bin/${1}" ; shift
elif [ -n "${1}" ] && [ -x "${INSTALL_DIR}/usr/bin/${1}" ] ; then
	MAIN="${INSTALL_DIR}/usr/bin/${1}" ; shift
elif [ -x "${INSTALL_DIR}/bin/${BINARY_NAME}" ] ; then
	MAIN="${INSTALL_DIR}/bin/${BINARY_NAME}"
elif [ -x "${INSTALL_DIR}/usr/bin/${BINARY_NAME}" ] ; then
	MAIN="${INSTALL_DIR}/usr/bin/${BINARY_NAME}"
elif [ -x "${INSTALL_DIR}/bin/wine64" ] ; then
	MAIN="${INSTALL_DIR}/bin/wine64"
else
	MAIN="${INSTALL_DIR}/bin/wine"
fi

if [ ! -x "${MAIN}" ] ; then
	echo "ERROR: ${MAIN} isn't executable or doesn't exist!"
	exit 1
fi

if [ -z "${APPLICATION}" ] ; then
	"${MAIN}" "${@}" | cat
else
	"${MAIN}" "${APPLICATION}" | cat
fi

exit 0